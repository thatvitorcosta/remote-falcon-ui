# Step 1: Create the build artifacts
FROM node:16.14.0-alpine AS build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json ./
COPY package-lock.json ./
RUN npm ci --silent
RUN npm install react-scripts@3.4.1 -g --silent

COPY . ./

ARG HOST_ENV
ARG VERSION
ARG CONTROL_PANEL_API
ARG VIEWER_API
ARG VIEWER_JWT_KEY
ARG GOOGLE_MAPS_KEY
ARG PUBLIC_POSTHOG_KEY
ARG GA_TRACKING_ID
ARG MIXPANEL_KEY
ARG HOSTNAME_PARTS
ARG EXTERNAL_DOMAIN_NAME

ARG SOCIAL_META

ENV REACT_APP_HOST_ENV=$HOST_ENV
ENV REACT_APP_VERSION=$VERSION
ENV REACT_APP_CONTROL_PANEL_API=$CONTROL_PANEL_API
ENV REACT_APP_VIEWER_API=$VIEWER_API
ENV REACT_APP_VIEWER_JWT_KEY=$VIEWER_JWT_KEY
ENV REACT_APP_GOOGLE_MAPS_KEY=$GOOGLE_MAPS_KEY
ENV REACT_APP_PUBLIC_POSTHOG_KEY=$PUBLIC_POSTHOG_KEY
ENV REACT_APP_GA_TRACKING_ID=$GA_TRACKING_ID
ENV REACT_APP_MIXPANEL_KEY=$MIXPANEL_KEY
ENV REACT_APP_HOSTNAME_PARTS=$HOSTNAME_PARTS
ENV REACT_APP_EXTERNAL_DOMAIN_NAME=$EXTERNAL_DOMAIN_NAME

ARG REACT_APP_SOCIAL_META=$SOCIAL_META


RUN npm run build

# Step 2: Create the compact production image
FROM node:16.14.0-alpine AS production
WORKDIR /app
COPY --from=build /app/build ./build
RUN npm install serve -g --silent

EXPOSE 3000

# start the web server
CMD ["serve", "-s", "/app/build"]
